{"version":3,"sources":["js/refs.js","js/task-1.js","js/task-2.js","js/task-3.js","index.js"],"names":["task1Btn","document","querySelector","task2Btn","task3Btn","delay","ms","Promise","resolve","setTimeout","logger","time","console","log","onStart","clear","then","addEventListener","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.60a95ef7.js","sourceRoot":"../src","sourcesContent":["export const task1Btn = document.querySelector('.task1-js');\nexport const task2Btn = document.querySelector('.task2-js');\nexport const task3Btn = document.querySelector('.task3-js');\n","// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд. Значением исполнившегося промиса должно быть то кол-во миллисекунд которое передали во время вызова функции delay.\n\nimport { task1Btn } from './refs';\n\nconst delay = ms => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(ms), ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\nconst onStart = () => {\n  console.clear();\n  delay(2000).then(logger);\n  delay(1000).then(logger);\n  delay(1500).then(logger);\n  delay(500).then(logger);\n};\n\ntask1Btn.addEventListener('click', onStart);\n","// Перепиши функцию toggleUserState() так, чтобы она не использовала callback-функцию callback, а принимала всего два параметра allUsers и userName и возвращала промис.\n\nimport { task2Btn } from './refs';\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise(resolve => {\n    const updatedUsers = allUsers.map(user =>\n      user.name === userName ? { ...user, active: !user.active } : user,\n    );\n\n    resolve(updatedUsers);\n  });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\nconst onStart = () => {\n  console.clear();\n  toggleUserState(users, 'Mango').then(logger);\n  toggleUserState(users, 'Lux').then(logger);\n};\n\ntask2Btn.addEventListener('click', onStart);\n","// Перепиши функцию makeTransaction() так, чтобы она не использовала callback-функции onSuccess и onError, а принимала всего один параметр transaction и возвращала промис.\n\nimport { task3Btn } from './refs';\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 1000);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      }\n\n      reject(transaction.id);\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nconst onStart = () => {\n  console.clear();\n\n  makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n};\n\ntask3Btn.addEventListener('click', onStart);\n","import './sass/main.scss';\nimport './js/task-1';\nimport './js/task-2';\nimport './js/task-3';\n"]}